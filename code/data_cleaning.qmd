---
output: html_document
editor_options: 
  chunk_output_type: console
---

#Loading up the library

```{r}
library(tidyverse)
library(viridis)
library(janitor)
library(ggdist)
library(dplyr)
library(cowplot)
library(ggplot2)
```

#Read in the orginal data

```{r}
nursing <- read_csv("data/De-Identified Informatics Competency Assessment for June 2024 Faculty  (Responses) - Form Responses 1.csv") |> 
  clean_names()
```

#changing some data table name

```{r}
new_names <- c("timestamp", "email_adress", "score", "current_role", "different_role", "teaching_informatics", "informatics_role_in_healthcare", "years_of_teaching_in_higher_education", "rank", "gender", "education_level", "ethnicity", "communication_technologies_in_healthcare_q1", "implement_health_information_technologies_q2", "deliver_care_q3", "workflow_processes_patient_client_outcomes_q4", "gather_generate_document_identify_q5", "entering_accurate_data_q6", "how_data_moves_q7", "identify_appropriate_data_q8", "describe_standardized_data_q9", "generate_information_knowledge_q10", "use_standardized_data_q11", "find_interpret_primary_and_secondary_data_q12", "use_appropriate_information_communication_technologies_q13", "understand_decision_support_tools_q14", "identify_emerging_technologies_q15", "impact_on_quality_safe_care_q16", "address_patients_needs_and_care_gaps_q17", "unexpected_consequences_of_implementation_q18", "how_data_is_exchanged_q19", "the_latest_legal_and_regulatory_requirements_q20", "patients_right_to_access_review_correct_q21")

nursing_new <- nursing

names(nursing_new) <- new_names
```

```{r}
na_counts <- nursing_new %>%
  summarise(across(everything(), ~ sum(is.na(.), na.rm = TRUE)))
print(na_counts)
```

Data mutation and manipulation

```{r}
nursing_new <- nursing_new |> 
  mutate(current_role = case_when(current_role %in% c("Adjunct Faculty", "Adjunct faculty (TUG/ELM)", "Professor Emerita, Adjunct Faculty", "adjunct faculty", "adjunct instructor")~"Adjunct Faculty",
                                  current_role %in% c("Faculty", "Faculty, Chair or Program")~"Faculty",
                                  current_role %in% c("Graduate Student", "Graduate Student, Faculty")~"Graduate Student",
                                  current_role %in% c("Under Graduate Student")~"Under Graduate Student"))

nursing_new<-nursing_new |> 
  mutate(rank = case_when(rank %in% c("Instuctor", "Instuctor, Lecturer")~"Instuctor", 
                          rank %in% c("Associate Professor", "Lecturer, Assistant Professor, Associate Professor")~"Associate Professor",
                          TRUE ~ rank))

```

Numericalized response

```{r}
nursing_new <- nursing_new |> 
  mutate(num_q10 = case_when(generate_information_knowledge_q10 == "No knowledge/no skill/unable to teach" ~ 0,
                   generate_information_knowledge_q10 == "Minimal knowledge/ minimal skill"~1,
                   generate_information_knowledge_q10 == "Moderate knowledge/ some skill"~2,
                   generate_information_knowledge_q10 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   generate_information_knowledge_q10 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q11 = case_when(use_standardized_data_q11 == "No knowledge/no skill/unable to teach" ~ 0,
                   use_standardized_data_q11 == "Minimal knowledge/ minimal skill"~1,
                   use_standardized_data_q11 == "Moderate knowledge/ some skill"~2,
                   use_standardized_data_q11 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   use_standardized_data_q11 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q12 = case_when(find_interpret_primary_and_secondary_data_q12 == "No knowledge/no skill/unable to teach" ~ 0,
                   find_interpret_primary_and_secondary_data_q12 == "Minimal knowledge/ minimal skill"~1,
                   find_interpret_primary_and_secondary_data_q12 == "Moderate knowledge/ some skill"~2,
                   find_interpret_primary_and_secondary_data_q12 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   find_interpret_primary_and_secondary_data_q12 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q13 = case_when(use_appropriate_information_communication_technologies_q13 == "No knowledge/no skill/unable to teach" ~ 0,
                   use_appropriate_information_communication_technologies_q13 == "Minimal knowledge/ minimal skill"~1,
                   use_appropriate_information_communication_technologies_q13 == "Moderate knowledge/ some skill"~2,
                   use_appropriate_information_communication_technologies_q13 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   use_appropriate_information_communication_technologies_q13 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q14 = case_when(understand_decision_support_tools_q14 == "No knowledge/no skill/unable to teach" ~ 0,
                   understand_decision_support_tools_q14 == "Minimal knowledge/ minimal skill"~1,
                   understand_decision_support_tools_q14 == "Moderate knowledge/ some skill"~2,
                   understand_decision_support_tools_q14 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   understand_decision_support_tools_q14 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q15 = case_when(identify_emerging_technologies_q15 == "No knowledge/no skill/unable to teach" ~ 0,
                   identify_emerging_technologies_q15 == "Minimal knowledge/ minimal skill"~1,
                   identify_emerging_technologies_q15 == "Moderate knowledge/ some skill"~2,
                   identify_emerging_technologies_q15 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   identify_emerging_technologies_q15 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q16 = case_when(impact_on_quality_safe_care_q16 == "No knowledge/no skill/unable to teach" ~ 0,
                   impact_on_quality_safe_care_q16 == "Minimal knowledge/ minimal skill"~1,
                   impact_on_quality_safe_care_q16 == "Moderate knowledge/ some skill"~2,
                   impact_on_quality_safe_care_q16 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   impact_on_quality_safe_care_q16 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q17 = case_when(address_patients_needs_and_care_gaps_q17 == "No knowledge/no skill/unable to teach" ~ 0,
                   address_patients_needs_and_care_gaps_q17 == "Minimal knowledge/ minimal skill"~1,
                   address_patients_needs_and_care_gaps_q17 == "Moderate knowledge/ some skill"~2,
                   address_patients_needs_and_care_gaps_q17 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   address_patients_needs_and_care_gaps_q17 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q18 = case_when(unexpected_consequences_of_implementation_q18 == "No knowledge/no skill/unable to teach" ~ 0,
                   unexpected_consequences_of_implementation_q18 == "Minimal knowledge/ minimal skill"~1,
                   unexpected_consequences_of_implementation_q18 == "Moderate knowledge/ some skill"~2,
                   unexpected_consequences_of_implementation_q18 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   unexpected_consequences_of_implementation_q18 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q19 = case_when(how_data_is_exchanged_q19 == "No knowledge/no skill/unable to teach" ~ 0,
                   how_data_is_exchanged_q19 == "Minimal knowledge/ minimal skill"~1,
                   how_data_is_exchanged_q19 == "Moderate knowledge/ some skill"~2,
                   how_data_is_exchanged_q19 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   how_data_is_exchanged_q19 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q20 = case_when(the_latest_legal_and_regulatory_requirements_q20 == "No knowledge/no skill/unable to teach" ~ 0,
                   the_latest_legal_and_regulatory_requirements_q20 == "Minimal knowledge/ minimal skill"~1,
                   the_latest_legal_and_regulatory_requirements_q20 == "Moderate knowledge/ some skill"~2,
                   the_latest_legal_and_regulatory_requirements_q20 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   the_latest_legal_and_regulatory_requirements_q20 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(num_q21 = case_when(patients_right_to_access_review_correct_q21 == "No knowledge/no skill/unable to teach" ~ 0,
                   patients_right_to_access_review_correct_q21 == "Minimal knowledge/ minimal skill"~1,
                   patients_right_to_access_review_correct_q21 == "Moderate knowledge/ some skill"~2,
                   patients_right_to_access_review_correct_q21 == "Adequate knowledge/ adequate skill/ could teach" ~ 3,
                   patients_right_to_access_review_correct_q21 == "Excellent: very knowledgeable/skilled/comfortable to teach" ~ 4,
                   TRUE ~ NA_real_)) |> 
  mutate(generate_information_knowledge_q10 = case_when(generate_information_knowledge_q10 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~generate_information_knowledge_q10)) |> 
  mutate(use_standardized_data_q11 = case_when(use_standardized_data_q11 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~use_standardized_data_q11)) |> 
  mutate(find_interpret_primary_and_secondary_data_q12 = case_when(find_interpret_primary_and_secondary_data_q12 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~find_interpret_primary_and_secondary_data_q12)) |> 
  mutate(use_appropriate_information_communication_technologies_q13 = case_when(use_appropriate_information_communication_technologies_q13 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~use_appropriate_information_communication_technologies_q13)) |> 
  mutate(understand_decision_support_tools_q14 = case_when(understand_decision_support_tools_q14 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~understand_decision_support_tools_q14)) |> 
  mutate(identify_emerging_technologies_q15 = case_when(identify_emerging_technologies_q15 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~identify_emerging_technologies_q15)) |> 
  mutate(impact_on_quality_safe_care_q16 = case_when(impact_on_quality_safe_care_q16 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~impact_on_quality_safe_care_q16)) |> 
  mutate(address_patients_needs_and_care_gaps_q17 = case_when(address_patients_needs_and_care_gaps_q17 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~address_patients_needs_and_care_gaps_q17)) |> 
  mutate(unexpected_consequences_of_implementation_q18 = case_when(unexpected_consequences_of_implementation_q18 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~unexpected_consequences_of_implementation_q18)) |> 
  mutate(how_data_is_exchanged_q19 = case_when(how_data_is_exchanged_q19 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~how_data_is_exchanged_q19)) |> 
  mutate(the_latest_legal_and_regulatory_requirements_q20 = case_when(the_latest_legal_and_regulatory_requirements_q20 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~the_latest_legal_and_regulatory_requirements_q20)) |> 
  mutate(patients_right_to_access_review_correct_q21 = case_when(patients_right_to_access_review_correct_q21 %in% c("No knowledge/no skill/unable to teach", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill")~"No knowledge/no skill/unable to teach",
               TRUE~patients_right_to_access_review_correct_q21))
  
```

Create one standardized response for evaluation

```{r}
nursing_new <- nursing_new |> 
  mutate(confidence_score = (num_q10+num_q11+num_q12+num_q13+num_q14+num_q15+num_q16+num_q17+num_q18+num_q19+num_q20+num_q21)/12)
```

Interactions based on the numerical response

```{r}
ggplot(nursing_new, aes(y = current_role, x = confidence_score))+
  geom_boxplot()

ggplot(nursing_new, aes(y = years_of_teaching_in_higher_education, x = confidence_score))+
  geom_boxplot()

ggplot(nursing_new, aes(y = gender, x = confidence_score))+
  geom_boxplot()

nursing_new |> 
  count(gender)
```

EDA: Interaction

```{r}
nursing_long <-nursing_new |> 
  select(generate_information_knowledge_q10:patients_right_to_access_review_correct_q21) |> 
  drop_na() |> 
  pivot_longer(cols = everything(), names_to = "question", values_to = "response") |> 
mutate(response = factor(response, 
              levels = c("Excellent: very knowledgeable/skilled/comfortable to teach", "Adequate knowledge/ adequate skill/ could teach", "Moderate knowledge/ some skill, Adequate knowledge/ adequate skill/ could teach", "Moderate knowledge/ some skill", "Minimal knowledge/ minimal skill", "No knowledge/no skill/unable to teach, Minimal knowledge/ minimal skill", "No knowledge/no skill/unable to teach"),
              ordered = TRUE), # Make it an ordered factor |> 
      question = factor(question,
                         levels = rev(c("generate_information_knowledge_q10", "use_standardized_data_q11", "find_interpret_primary_and_secondary_data_q12", "use_appropriate_information_communication_technologies_q13", "understand_decision_support_tools_q14", "identify_emerging_technologies_q15", "impact_on_quality_safe_care_q16", "address_patients_needs_and_care_gaps_q17", "unexpected_consequences_of_implementation_q18", "how_data_is_exchanged_q19", "the_latest_legal_and_regulatory_requirements_q20", "patients_right_to_access_review_correct_q21")),
                         ordered = TRUE))

ggplot(nursing_long, aes(y = question, fill = response)) +
  geom_bar(position = "fill") +
  labs(x = "Proportion",
       title = "Survey Questions and Answers",
       y = "",
       fill = "") +
  theme_minimal()+
  # theme(axis.text.y = element_blank(), 
  #       axis.ticks.y = element_blank())+
  scale_fill_viridis_d()
```

Table for interaction

```{r}
proportion_table <- nursing_long |> 
  group_by(question, response) |> 
  summarise(count = n(), .groups = 'drop') |> 
  #calculate total count for each question
  group_by(question) |> 
  mutate(total = sum(count),
         proportion = count / total) |> 
  ungroup() |> 
  select(question, response, count, proportion) |> 
  #Reshape the table
  pivot_wider(names_from = response, values_from = c(count, proportion), values_fill = 0) |> 
  clean_names()

prortion_table_test <- proportion_table |> 
  mutate(
    Adequate_knowledge = paste(count_adequate_knowledge_adequate_skill_could_teach, sprintf("(%0.2f)", as.numeric(proportion_adequate_knowledge_adequate_skill_could_teach))),
    Excellent_knowledge = paste(count_excellent_very_knowledgeable_skilled_comfortable_to_teach, sprintf("(%0.2f)", as.numeric(proportion_excellent_very_knowledgeable_skilled_comfortable_to_teach))),
    Minimal_knowledge = paste(count_minimal_knowledge_minimal_skill, sprintf("(%0.2f)", as.numeric(proportion_minimal_knowledge_minimal_skill))),
    Moderate_knowledge = paste(count_moderate_knowledge_some_skill, sprintf("(%0.2f)", as.numeric(proportion_moderate_knowledge_some_skill))),
    No_knowledge = paste(count_no_knowledge_no_skill_unable_to_teach, sprintf("(%0.2f)", as.numeric(proportion_no_knowledge_no_skill_unable_to_teach)))
  ) |> 
  select(question, Excellent_knowledge, Adequate_knowledge, Moderate_knowledge, Minimal_knowledge,No_knowledge)

View(prortion_table_test)

```

EDA: Single variable distribution

```{r}
ggplot(nursing_new, aes(y = current_role)) +
  geom_bar(fill = "navy") +
  labs(x = "Count",
       title = "Current role distribution")

ggplot(nursing_new, aes(y = teaching_informatics)) +
  geom_bar(fill = "navy") +
  labs(x = "Count",
       title = "Teaching informatics")

ggplot(nursing_new, aes(y = rank)) +
  geom_bar(fill = "navy") +
  labs(x = "Count",
       title = "Rank Distribution")


```

# descriptive response
```{r}
nursing_new <- nursing_new |> 
  mutate(n_excellent = rowSums(
    across(generate_information_knowledge_q10:patients_right_to_access_review_correct_q21) == "Excellent: very knowledgeable/skilled/comfortable to teach", na.rm = TRUE)) |> 
  mutate(n_adequate = rowSums(
    across(generate_information_knowledge_q10:patients_right_to_access_review_correct_q21) == "Adequate knowledge/ adequate skill/ could teach", na.rm = TRUE)) |> 
  mutate(n_moderate = rowSums(
    across(generate_information_knowledge_q10:patients_right_to_access_review_correct_q21) == "Moderate knowledge/ some skill", na.rm = TRUE)) |> 
  mutate(n_minimal = rowSums(
    across(generate_information_knowledge_q10:patients_right_to_access_review_correct_q21) == "Minimal knowledge/ minimal skill", na.rm = TRUE)) |> 
  mutate(n_no_knowledge = rowSums(
    across(generate_information_knowledge_q10:patients_right_to_access_review_correct_q21) == "No knowledge/no skill/unable to teach", na.rm = TRUE)) |> 
  mutate(excellent_8 = n_excellent >= 8,
         adequate_8 = n_adequate >= 8,
         moderate_8 = n_moderate >= 8,
         minimal_8= n_minimal >= 8,
         no_knowledge_8 = n_no_knowledge >= 8)



```



# Table and Visualization for excellent descriptive response
```{r}
excellent_table <-nursing_new |> 
  filter(excellent_8 == TRUE) |> 
  group_by(current_role, teaching_informatics, years_of_teaching_in_higher_education, rank, gender, education_level, ethnicity) |> 
  summarise(count = n())

View(excellent_table)

#Visuals


e1 <- ggplot(excellent_table, aes(y = current_role))+
  geom_bar()+
  labs(title = "Role for Excellent Response",
       y = "Current Role")

e2 <-ggplot(excellent_table, aes(y = teaching_informatics))+
  geom_bar()+
  labs(title = "Teaching Informatics for Excellent Response",
       y = "Teaching Informatics")

e3 <-ggplot(excellent_table, aes(y = years_of_teaching_in_higher_education))+
  geom_bar()+
  labs(title = "Years of Teaching for Excellent Response",
       y = "Years of Teaching in Higher Education")

e4 <-ggplot(excellent_table, aes(y = rank))+
  geom_bar()+
  labs(title = "Ranks for Excellent Response",
       y = "Ranks")

e5 <-ggplot(excellent_table, aes(y = gender))+
  geom_bar()+
  labs(title = "Gender for Excellent Response",
       y = "Gender")
e6 <-ggplot(excellent_table, aes(y = education_level))+
  geom_bar()+
  labs(title = "Education Level for Excellent Response",
       y = "Education Level")

e7 <-ggplot(excellent_table, aes(y = ethnicity))+
  geom_bar()+
  labs(title = "ethnicity for Excellent Response",
       y = "ethnicity")

plot_grid(e1, e2, e3, e4, e5, e6, e7)

```


```{r}
prop_excellent<-nursing_new |> 
  group_by(excellent_8) |> 
  summarize(n = n(),
            prop_white = sum(ethnicity == "White")/n(),
            prop_faculty = sum(current_role == "Faculty")/n(),
            prop_full_time = sum(teaching_informatics == "Full-time",
                                 na.rm = TRUE)/n(),
            prop_part_time = sum(teaching_informatics == "Part-time",
                                 na.rm = TRUE)/n(),
            prop_not_at_all = sum(teaching_informatics == "Not at all",
                                 na.rm = TRUE)/n(),
            prop_2_5_yrs = sum(years_of_teaching_in_higher_education == "2-5",
                                 na.rm = TRUE)/n(),
            prop_master = sum(education_level == "Masters",
                                 na.rm = TRUE)/n())

View(prop_excellent)
```


```{r}
m1 <- lm(confidence_score ~ ethnicity + current_role + teaching_informatics + years_of_teaching_in_higher_education + gender, data = nursing_new)
library(broom)
tidy(m1)


```



# Table and Visualization for adequate descriptive response
```{r}
adequate_table <-nursing_new |> 
  filter(adequate_8 == TRUE) |> 
  group_by(current_role, teaching_informatics, years_of_teaching_in_higher_education, rank, gender, education_level, ethnicity) |> 
  summarise(count = n())

View(adequate_table)

#Visuals


a1 <- ggplot(adequate_table, aes(y = current_role))+
  geom_bar()+
  labs(title = "Role for Adequate Response",
       y = "Current Role")

a2 <-ggplot(adequate_table, aes(y = teaching_informatics))+
  geom_bar()+
  labs(title = "Teaching Informatics for Adequate Response",
       y = "Teaching Informatics")

a3 <-ggplot(adequate_table, aes(y = years_of_teaching_in_higher_education))+
  geom_bar()+
  labs(title = "Years of Teaching for Adequate Response",
       y = "Years of Teaching in Higher Education")

a4 <-ggplot(adequate_table, aes(y = rank))+
  geom_bar()+
  labs(title = "Ranks for Adequate Response",
       y = "Ranks")

a5 <-ggplot(adequate_table, aes(y = gender))+
  geom_bar()+
  labs(title = "Gender for Adequate Response",
       y = "Gender")
a6 <-ggplot(adequate_table, aes(y = education_level))+
  geom_bar()+
  labs(title = "Education Level for Adequate Response",
       y = "Education Level")

a7 <-ggplot(adequate_table, aes(y = ethnicity))+
  geom_bar()+
  labs(title = "ethnicity for Adequate Response",
       y = "ethnicity")

plot_grid(a1, a2, a3, a4, a5, a6, a7)
```


```{r}
prop_adequate<- nursing_new |> 
  group_by(adequate_8) |> 
  summarize(n = n(),
            prop_white = sum(ethnicity == "White")/n(),
            prop_faculty = sum(current_role == "Faculty")/n(),
            prop_full_time = sum(teaching_informatics == "Full-time",
                                 na.rm = TRUE)/n(),
            prop_part_time = sum(teaching_informatics == "Part-time",
                                 na.rm = TRUE)/n(),
            prop_not_at_all = sum(teaching_informatics == "Not at all",
                                 na.rm = TRUE)/n(),
            prop_2_5_yrs = sum(years_of_teaching_in_higher_education == "2-5",
                                 na.rm = TRUE)/n(),
            prop_master = sum(education_level == "Masters",
                                 na.rm = TRUE)/n())

View(prop_adequate)
```



# Table and Visualization for moderate descriptive response
```{r}
moderate_table <-nursing_new |> 
  filter(moderate_8 == TRUE) |> 
  group_by(current_role, teaching_informatics, years_of_teaching_in_higher_education, rank, gender, education_level, ethnicity) |> 
  summarise(count = n())

View(moderate_table)

#Visuals


m1 <- ggplot(moderate_table, aes(y = current_role))+
  geom_bar()+
  labs(title = "Role for Moderate Response",
       y = "Current Role")

m2 <-ggplot(moderate_table, aes(y = teaching_informatics))+
  geom_bar()+
  labs(title = "Teaching Informatics for Moderate Response",
       y = "Teaching Informatics")

m3 <-ggplot(moderate_table, aes(y = years_of_teaching_in_higher_education))+
  geom_bar()+
  labs(title = "Years of Teaching for Moderate Response",
       y = "Years of Teaching in Higher Education")

m4 <-ggplot(moderate_table, aes(y = rank))+
  geom_bar()+
  labs(title = "Ranks for Moderate Response",
       y = "Ranks")

m5 <-ggplot(moderate_table, aes(y = gender))+
  geom_bar()+
  labs(title = "Gender for Moderate Response",
       y = "Gender")
m6 <-ggplot(moderate_table, aes(y = education_level))+
  geom_bar()+
  labs(title = "Education Level for Moderate Response",
       y = "Education Level")

m7 <-ggplot(moderate_table, aes(y = ethnicity))+
  geom_bar()+
  labs(title = "ethnicity for Moderate Response",
       y = "ethnicity")

plot_grid(m1, m2, m3, m4, m5, m6, m7)
```


```{r}
prop_moderate<-nursing_new |> 
  group_by(moderate_8) |> 
  summarize(n = n(),
            prop_white = sum(ethnicity == "White")/n(),
            prop_faculty = sum(current_role == "Faculty")/n(),
            prop_full_time = sum(teaching_informatics == "Full-time",
                                 na.rm = TRUE)/n(),
            prop_part_time = sum(teaching_informatics == "Part-time",
                                 na.rm = TRUE)/n(),
            prop_not_at_all = sum(teaching_informatics == "Not at all",
                                 na.rm = TRUE)/n(),
            prop_2_5_yrs = sum(years_of_teaching_in_higher_education == "2-5",
                                 na.rm = TRUE)/n(),
            prop_master = sum(education_level == "Masters",
                                 na.rm = TRUE)/n())

View(prop_moderate)
```



# Table and Visualization for minimal descriptive response
```{r}
minimal_table <-nursing_new |> 
  filter(minimal_8 == TRUE) |> 
  group_by(current_role, teaching_informatics, years_of_teaching_in_higher_education, rank, gender, education_level, ethnicity) |> 
  summarise(count = n())

View(minimal_table)

#Visuals


mi1 <- ggplot(minimal_table, aes(y = current_role))+
  geom_bar()+
  labs(title = "Role for Minimal Response",
       y = "Current Role")

mi2 <-ggplot(minimal_table, aes(y = teaching_informatics))+
  geom_bar()+
  labs(title = "Teaching Informatics for Minimal Response",
       y = "Teaching Informatics")

mi3 <-ggplot(minimal_table, aes(y = years_of_teaching_in_higher_education))+
  geom_bar()+
  labs(title = "Years of Teaching for Minimal Response",
       y = "Years of Teaching in Higher Education")

mi4 <-ggplot(minimal_table, aes(y = rank))+
  geom_bar()+
  labs(title = "Ranks for Minimal Response",
       y = "Ranks")

mi5 <-ggplot(minimal_table, aes(y = gender))+
  geom_bar()+
  labs(title = "Gender for Minimal Response",
       y = "Gender")
mi6 <-ggplot(minimal_table, aes(y = education_level))+
  geom_bar()+
  labs(title = "Education Level for Minimal Response",
       y = "Education Level")

mi7 <-ggplot(minimal_table, aes(y = ethnicity))+
  geom_bar()+
  labs(title = "ethnicity for Minimal Response",
       y = "ethnicity")

plot_grid(mi1, mi2, mi3, mi4, mi5, mi6, mi7)
```



```{r}
prop_minimal <- nursing_new |> 
  group_by(minimal_8) |> 
  summarize(n = n(),
            prop_white = sum(ethnicity == "White")/n(),
            prop_faculty = sum(current_role == "Faculty")/n(),
            prop_full_time = sum(teaching_informatics == "Full-time",
                                 na.rm = TRUE)/n(),
            prop_part_time = sum(teaching_informatics == "Part-time",
                                 na.rm = TRUE)/n(),
            prop_not_at_all = sum(teaching_informatics == "Not at all",
                                 na.rm = TRUE)/n(),
            prop_2_5_yrs = sum(years_of_teaching_in_higher_education == "2-5",
                                 na.rm = TRUE)/n(),
            prop_master = sum(education_level == "Masters",
                                 na.rm = TRUE)/n())

View(prop_minimal)
```



# Table and Visualization for no knowledge descriptive response
```{r}
no_knowledge_table <-nursing_new |> 
  filter(no_knowledge_8 == TRUE) |> 
  group_by(current_role, teaching_informatics, years_of_teaching_in_higher_education, rank, gender, education_level, ethnicity) |> 
  summarise(count = n())

View(no_knowledge_table)

#Visuals


n1 <- ggplot(no_knowledge_table, aes(y = current_role))+
  geom_bar()+
  labs(title = "Role for No Knowledge Response",
       y = "Current Role")

n2 <-ggplot(no_knowledge_table, aes(y = teaching_informatics))+
  geom_bar()+
  labs(title = "Teaching Informatics for No Knowledge Response",
       y = "Teaching Informatics")

n3 <-ggplot(no_knowledge_table, aes(y = years_of_teaching_in_higher_education))+
  geom_bar()+
  labs(title = "Years of Teaching for No Knowledge Response",
       y = "Years of Teaching in Higher Education")

n4 <-ggplot(no_knowledge_table, aes(y = rank))+
  geom_bar()+
  labs(title = "Ranks for No Knowledge Response",
       y = "Ranks")

n5 <-ggplot(no_knowledge_table, aes(y = gender))+
  geom_bar()+
  labs(title = "Gender for No Knowledge Response",
       y = "Gender")
n6 <-ggplot(no_knowledge_table, aes(y = education_level))+
  geom_bar()+
  labs(title = "Education Level for No Knowledge Response",
       y = "Education Level")

n7 <-ggplot(no_knowledge_table, aes(y = ethnicity))+
  geom_bar()+
  labs(title = "ethnicity for No Knowledge Response",
       y = "ethnicity")

plot_grid(n1, n2, n3, n4, n5, n6, n7)
```


```{r}
prop_no_knowledge <- nursing_new |> 
  group_by(no_knowledge_8) |> 
  summarize(n = n(),
            prop_white = sum(ethnicity == "White")/n(),
            prop_faculty = sum(current_role == "Faculty")/n(),
            prop_full_time = sum(teaching_informatics == "Full-time",
                                 na.rm = TRUE)/n(),
            prop_part_time = sum(teaching_informatics == "Part-time",
                                 na.rm = TRUE)/n(),
            prop_not_at_all = sum(teaching_informatics == "Not at all",
                                 na.rm = TRUE)/n(),
            prop_2_5_yrs = sum(years_of_teaching_in_higher_education == "2-5",
                                 na.rm = TRUE)/n(),
            prop_master = sum(education_level == "Masters",
                                 na.rm = TRUE)/n())

View(prop_no_knowledge)
```



# Table for comparison across the responses
```{r}
# Reshape the data
test_long<-nursing_new |> 
  pivot_longer(cols = c(excellent_8, adequate_8, moderate_8, minimal_8, no_knowledge_8),
               names_to = "answer_type",
               values_to = "is_true")

# Summarize the data to get counts of TRUE values for each group

summary_table<- test_long |> 
  filter(is_true == TRUE) |> # Only keep rows where the value is TRUE
  group_by(current_role, teaching_informatics, years_of_teaching_in_higher_education, rank, gender, education_level, ethnicity, answer_type) |> 
  summarize(count_true = n(), .groups = "drop")

  


```

#Cluster analysis and Visualization
```{r}
#Perform clustering
##K-means Clustering

nursing_cluster <- nursing_new |> 
  select(num_q10:num_q21)

#scale the data (important for K-means)
nursing_cluster_scaled <- scale(nursing_cluster)
nursing_cluster_scaled <- nursing_cluster_scaled[complete.cases(nursing_cluster_scaled), ]

# Perform K-means clustering with 3 clusters
set.seed(123)
kmeans_results <- kmeans(nursing_cluster_scaled, centers = 3)

nursing_new_cluster <- nursing_new |> 
  filter(!if_any(c(num_q10:num_q21), is.na))


nursing_new_cluster$cluster <- kmeans_results$cluster

#Cluster summary
cluster_summary <- nursing_new_cluster |> 
  group_by(cluster) |> 
  summarise(
    count = n(),
    average_response = rowMeans(across(num_q10:num_q21), na.rm = TRUE),
    gender_distribution = toString(table(gender)),
    rank_distribution = toString(table(rank)),
    roles_distribution = toString(table(current_role))
  )

print(cluster_summary)

# Gather the question responses for plotting
nursing_new_cluster_long <- nursing_new_cluster |> 
  pivot_longer(cols = num_q10:num_q21, names_to = "question", values_to = "response")

# Plot the distribution of responses by cluster
ggplot(nursing_new_cluster_long, aes(x = question, y = response, fill = as.factor(cluster))) +
  geom_boxplot() +
  labs(title = "Distribution of Responses by Cluster", fill = "Cluster") +
  theme_minimal()

# Calculate the proportion of high (excellent/adequate) vs low (minimal/no) responses in each cluster
cluster_consistency <- nursing_new_cluster %>%
  group_by(cluster) |> 
  summarise(
    high_responses = mean(rowMeans(across(num_q10:num_q21), na.rm = TRUE) >= 4),
    low_responses = mean(rowMeans(across(num_q10:num_q21), na.rm = TRUE) <= 2)
  )

print(cluster_consistency)

```


#Cross tab 
```{r}

```







